#!/usr/bin/env ruby

$VERBOSE = true

label = ENV['LABEL'] || "CPU"
t_warn = ENV['T_WARN'].to_f || 50.0
t_crit = ENV['T_CRIT'].to_f || 80.0
decimals = ENV['DECIMALS'].to_i || 2
color_normal = ENV['COLOR_NORMAL'] || "#00ffff"
color_warn = ENV['COLOR_WARN'] || "#FFFC00"
color_crit = ENV['COLOR_CRIT'] || "#FF0000"

prev_file = IO.readlines(::File.join('', 'proc', 'stat')).select { |line| line.start_with?('cpu') }

Kernel.sleep(0.05)

file = IO.readlines(::File.join('', 'proc', 'stat')).select { |line| line.start_with?('cpu') }
total_usage = 0.0

file.size.times do |i|
  data, prev_data = file[i].split.map(&:to_f), prev_file[i].split.map(&:to_f)

  %w(user nice sys idle iowait irq softirq steal).each_with_index do |el, index|
    eval "@#{el}, @prev_#{el} = #{data[index + 1]}, #{prev_data[index + 1]}"
  end

  previdle = @prev_idle + @prev_iowait
  idle = @idle + @iowait
  totald = idle + (@user + @nice + @sys + @irq + @softirq + @steal) -
           (previdle + (@prev_user + @prev_nice + @prev_sys + @prev_irq + @prev_softirq + @prev_steal))

  cpu_usage = ((totald - (idle - previdle)) / totald * 100)
  total_usage += cpu_usage
end

average_usage = (total_usage / file.size).round(decimals)

color = if average_usage >= t_crit
          color_crit
        elsif average_usage >= t_warn
          color_warn
        else
          color_normal
        end

puts "<span color='#{color}'>#{label}#{average_usage}%</span>"
